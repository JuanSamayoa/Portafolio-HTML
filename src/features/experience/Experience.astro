---
/**
 * EXPERIENCE SECTION - Experiencia laboral
 * Timeline vertical con diseño moderno
 */

import Section from "../../shared/ui/Section.astro";
import Card from "../../shared/ui/Card.astro";
import Badge from "../../shared/ui/Badge.astro";
import { experienceData } from "../../data/experience";
---

<Section id="experience" background="secondary">
  <div class="space-y-12">
    <!-- Header -->
    <div class="text-center space-y-4">
      <h2
        class="text-3xl sm:text-4xl lg:text-5xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-brand-400 to-success-400"
      >
        Experiencia Profesional
      </h2>
      <p class="text-lg text-foreground-secondary max-w-3xl mx-auto">
        Mi trayectoria en QA, desarrollo y automatización
      </p>
    </div>

    <!-- Timeline -->
    <div class="max-w-4xl mx-auto relative">
      <!-- Línea vertical del timeline -->
      <div
        class="absolute left-8 md:left-1/2 top-0 bottom-0 w-0.5 bg-gradient-to-b from-brand-500 via-brand-400 to-success-500"
        aria-hidden="true"
      >
      </div>

      <!-- Experiencias -->
      <div class="space-y-12">
        {
          experienceData.map((exp, index) => (
            <div class="relative">
              {/* Punto del timeline */}
              <div class="absolute left-8 md:left-1/2 w-4 h-4 -ml-2 mt-6 rounded-full bg-brand-500 border-4 border-background-secondary shadow-lg z-10">
                {exp.isActive && (
                  <span class="absolute inset-0 rounded-full bg-brand-500 animate-ping" />
                )}
              </div>

              {/* Contenido - alternado en desktop */}
              <div
                class:list={[
                  "ml-20 md:ml-0 md:w-[calc(50%-3rem)]",
                  index % 2 === 0
                    ? "md:mr-auto md:pr-12"
                    : "md:ml-auto md:pl-12",
                ]}
              >
                <Card variant="glass" padding="lg" hover>
                  <div class="space-y-4">
                    {/* Header con fecha */}
                    <div class="flex items-start justify-between gap-4 flex-wrap">
                      <div class="flex-1">
                        <h3 class="text-xl font-bold text-foreground-primary">
                          {exp.title}
                        </h3>
                        <p class="text-brand-400 font-semibold">
                          {exp.company}
                        </p>
                        <p class="text-sm text-foreground-tertiary">
                          {exp.location}
                        </p>
                      </div>
                      {exp.isActive && <Badge text="Actual" variant="status" />}
                    </div>

                    <div class="flex items-center gap-2 text-sm text-foreground-secondary">
                      <svg
                        class="w-4 h-4"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                        />
                      </svg>
                      <span>{exp.date}</span>
                    </div>

                    {/* Descripción */}
                    <p class="text-foreground-secondary leading-relaxed">
                      {exp.description}
                    </p>

                    {/* Technologies */}
                    {exp.badges && exp.badges.length > 0 && (
                      <div class="pt-3 border-t border-white/10">
                        <div class="flex flex-wrap gap-2">
                          {exp.badges.map((badge) => (
                            <Badge text={badge.text} variant="tech" />
                          ))}
                        </div>
                      </div>
                    )}
                  </div>
                </Card>
              </div>
            </div>
          ))
        }
      </div>
    </div>

    <!-- CTA -->
    <div class="text-center pt-8">
      <Card variant="bordered" padding="md" class="max-w-md mx-auto">
        <div class="space-y-3">
          <p class="text-foreground-secondary">
            ¿Quieres saber más sobre mi experiencia?
          </p>
          <a
            href="#contact"
            class="inline-flex items-center gap-2 text-brand-400 hover:text-brand-300 font-semibold transition-colors"
          >
            Descargar CV completo
            <svg
              class="w-4 h-4"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
              ></path>
            </svg>
          </a>
        </div>
      </Card>
    </div>
  </div>
</Section>

<style>
  /* Animación de entrada para cada item */
  @keyframes slide-in {
    from {
      opacity: 0;
      transform: translateX(-20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  /* Aplicar animación con Intersection Observer vía JS */
  .experience-item {
    opacity: 0;
  }

  .experience-item.visible {
    animation: slide-in 0.6s ease-out forwards;
  }
</style>

<script>
  // Animar items al hacer scroll
  document.addEventListener("DOMContentLoaded", () => {
    const items = document.querySelectorAll("#experience .relative");

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("visible");
          }
        });
      },
      { threshold: 0.2 }
    );

    items.forEach((item) => {
      item.classList.add("experience-item");
      observer.observe(item);
    });
  });
</script>

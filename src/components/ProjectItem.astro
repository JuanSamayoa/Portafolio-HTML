---
import { getBadgeClasses } from "../utils/badgeUtils";
import { getOptimizedImageProps, getProjectImageConfig } from '../utils/imageUtils';

interface Props {
  title: string;
  description: string;
  image?: string;
  tags: Array<{ text: string; color?: string }>;
  link?: string;
  github?: string;
  featured?: boolean;
}

const {
  title,
  description,
  image,
  tags = [],
  link,
  github,
  featured = false
} = Astro.props;

// Optimizar imagen si existe usando configuración para proyectos
const imageProps = image ? getOptimizedImageProps(
  getProjectImageConfig(image, title, {
    width: 400,
    height: 225,
    lossless: false // Para proyectos, balance entre calidad y tamaño
  })
) : null;
---

<article class={`relative rounded-lg overflow-hidden border border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-800/50 shadow-sm hover:shadow-md transition-all duration-300 h-full flex flex-col ${featured ? 'border-primary/20 dark:border-primary/30 ring-1 ring-primary/10' : ''}`}>
  {image && imageProps && (
    <div class="aspect-video w-full overflow-hidden">
      <img 
        {...imageProps}
        class="w-full h-full object-cover transition-transform duration-300 hover:scale-105"
      />
    </div>
  )}
  
  <div class="p-5 flex flex-col flex-grow">
    <h3 class="text-xl font-bold text-gray-800 dark:text-white mb-2 group-hover:text-primary transition-colors">
      {title}
      {featured && (
        <span class="inline-flex items-center ml-2 px-2 py-0.5 rounded text-xs bg-primary/10 text-primary dark:bg-primary/20 dark:text-primary-300">
          Destacado
        </span>
      )}
    </h3>
    
    <p class="text-gray-600 dark:text-gray-300 mb-4 flex-grow">
      {description}
    </p>
    
    {tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-4">
        {tags.map(tag => (
          <span class={getBadgeClasses(tag.text)}>
            {tag.text}
          </span>
        ))}
      </div>
    )}
    
    <div class="flex justify-between items-center mt-auto pt-3 border-t border-gray-100 dark:border-gray-700/50">
      {link && (
        <a 
          href={link} 
          target="_blank" 
          rel="noopener noreferrer"
          class="text-sm text-primary dark:text-primary-300 hover:text-primary-600 dark:hover:text-primary-200 transition-colors flex items-center"
        >
          <span>Ver demo</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
          </svg>
        </a>
      )}
      
      {github && (
        <a 
          href={github} 
          target="_blank" 
          rel="noopener noreferrer"
          class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 transition-colors flex items-center"
        >
          <span>Ver código</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" viewBox="0 0 24 24" fill="currentColor">
            <path fill-rule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.748 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clip-rule="evenodd" />
          </svg>
        </a>
      )}
      
      {!link && !github && (
        <span class="text-xs text-gray-500 dark:text-gray-400 italic">Proyecto privado</span>
      )}
    </div>
  </div>
</article>

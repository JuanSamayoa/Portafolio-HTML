---
// Definición de las propiedades del Badge
interface Props {
  text: string;
  variant?: 'primary' | 'secondary' | 'accent' | 'success' | 'warning' | 'error' | 'neutral';
  size?: 'sm' | 'md' | 'lg';
  icon?: string;
  href?: string;
  animated?: boolean;
  class?: string;
}

// Valores por defecto
const {
  text,
  variant = 'primary',
  size = 'md',
  icon,
  href,
  animated = false,
  class: className = '',
} = Astro.props;

// Mapeo de variantes a clases de Tailwind
const variantClasses = {
  primary: 'bg-primary/10 text-primary border-primary/30 dark:bg-primary/20',
  secondary: 'bg-secondary/10 text-secondary border-secondary/30 dark:bg-secondary/20',
  accent: 'bg-accent/10 text-accent border-accent/30 dark:bg-accent/20',
  success: 'bg-green-500/10 text-green-600 border-green-500/30 dark:text-green-400 dark:bg-green-500/20',
  warning: 'bg-yellow-500/10 text-yellow-600 border-yellow-500/30 dark:text-yellow-300 dark:bg-yellow-500/20',
  error: 'bg-red-500/10 text-red-600 border-red-500/30 dark:text-red-400 dark:bg-red-500/20',
  neutral: 'bg-gray-200/80 text-gray-700 border-gray-300 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-600',
};

// Mapeo de tamaños a clases de Tailwind
const sizeClasses = {
  sm: 'text-xs py-0.5 px-2',
  md: 'text-sm py-1 px-3',
  lg: 'text-base py-1.5 px-4',
};

// Construir la clase final
const badgeClass = `inline-flex items-center gap-1 font-medium rounded-full border ${variantClasses[variant]} ${sizeClasses[size]} ${animated ? 'badge-animated' : ''} ${className}`;

// Componente condicional (link o span)
const Component = href ? 'a' : 'span';
const attrs = href ? { href } : {};
---

<Component class={badgeClass} {...attrs}>
  {icon && <span class="badge-icon" set:html={icon}></span>}
  <span>{text}</span>
</Component>

<style>
  .badge-animated {
    position: relative;
    overflow: hidden;
    transition: all 0.3s ease;
  }
  
  .badge-animated::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transition: 0.5s;
  }
  
  .badge-animated:hover::before {
    left: 100%;
  }
  
  .badge-animated:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  
  .badge-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }
  
  /* Asegura que los SVG dentro de los iconos tengan el tamaño correcto */
  .badge-icon :global(svg) {
    height: 1em;
    width: 1em;
  }
</style>

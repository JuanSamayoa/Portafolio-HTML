---
import MailIcon from "./icons/MailIcon.astro";
import { personalInfo } from "../data/portfolio";
---

<!-- 1. COMPONENT START -->
<section
  class="py-20 bg-gradient-to-br from-gray-50 via-white to-gray-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 relative overflow-hidden"
>
  <!-- Elementos decorativos de fondo (no interactivos, detrás del contenido) -->
  <div
    class="absolute inset-0 opacity-20 pointer-events-none -z-10"
    aria-hidden="true"
  >
    <div
      class="absolute top-20 left-10 w-72 h-72 bg-primary/6 rounded-full blur-3xl animate-pulse"
      style="transform: translateZ(0); will-change: transform, opacity;"
    >
    </div>
    <div
      class="absolute bottom-20 right-10 w-96 h-96 bg-secondary/6 rounded-full blur-3xl animate-pulse"
      style="animation-delay: 2s; transform: translateZ(0); will-change: transform, opacity;"
    >
    </div>
    <div
      class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[800px] h-[800px] bg-gradient-to-r from-primary/5 to-secondary/5 rounded-full blur-3xl animate-pulse"
      style="animation-delay: 4s; mix-blend-mode: overlay; opacity: .35; transform: translateZ(0); will-change: transform, opacity;"
    >
    </div>
  </div>

  <div class="container mx-auto px-6 relative z-10">
    <div class="max-w-6xl mx-auto">
      <!-- Header con animación mejorada -->
      <div class="text-center mb-16 reveal-item" style="--reveal-delay: 0ms">
        <div
          class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary/10 text-primary font-medium text-sm mb-6 animate-fade-in-up"
        >
          <svg
            class="w-4 h-4"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"
            ></path>
          </svg>
          Contacto
        </div>
        <h2
          class="text-4xl md:text-5xl font-bold text-gray-800 dark:text-white mb-6 animate-fade-in-up"
          style="animation-delay: 200ms;"
        >
          Hablemos de tu
          <span
            class="bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent"
            >próximo proyecto</span
          >
        </h2>
        <p
          class="text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto animate-fade-in-up"
          style="animation-delay: 400ms;"
        >
          Estoy disponible para discutir oportunidades de colaboración,
          proyectos freelance o cualquier idea que tengas en mente.
        </p>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-3 gap-12">
        <!-- Información de contacto mejorada -->
        <div class="lg:col-span-1 reveal-item" style="--reveal-delay: 100ms">
          <div class="space-y-6">
            <!-- Email -->
            <div
              class="group flex items-start gap-4 p-6 rounded-2xl bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm border border-gray-200/50 dark:border-gray-700/50 shadow-lg hover:shadow-2xl hover:shadow-primary/10 transition-all duration-500 cursor-pointer transform hover:scale-[1.02] hover:-translate-y-1"
              onclick="window.open('mailto:${personalInfo.email}', '_blank')"
            >
              <div
                class="bg-gradient-to-br from-primary to-primary/80 p-4 rounded-2xl group-hover:scale-110 group-hover:rotate-6 transition-all duration-500 shadow-xl group-hover:shadow-primary/30"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-6 w-6 text-white"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <path
                    d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"
                  ></path>
                  <polyline points="22,6 12,13 2,6"></polyline>
                </svg>
              </div>
              <div class="flex-1">
                <h4
                  class="font-bold text-gray-800 dark:text-white group-hover:text-primary transition-colors duration-300 mb-1"
                >
                  Email
                </h4>
                <p
                  class="text-primary dark:text-primary-300 hover:underline font-medium text-sm mb-1"
                >
                  ${personalInfo.email}
                </p>
                <p
                  class="text-xs text-gray-500 dark:text-gray-400 group-hover:text-primary/70 transition-colors"
                >
                  Respuesta en 24 horas
                </p>
              </div>
            </div>

            <!-- Ubicación -->
            <div
              class="group flex items-start gap-4 p-6 rounded-2xl bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm border border-gray-200/50 dark:border-gray-700/50 shadow-lg hover:shadow-2xl hover:shadow-green-500/10 transition-all duration-500 cursor-pointer transform hover:scale-[1.02] hover:-translate-y-1"
              onclick="window.open('https://maps.google.com/?q=${encodeURIComponent(personalInfo.location)}', '_blank')"
            >
              <div
                class="bg-gradient-to-br from-green-500 to-green-600 p-4 rounded-2xl group-hover:scale-110 group-hover:rotate-6 transition-all duration-500 shadow-xl group-hover:shadow-green-500/30"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-6 w-6 text-white"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"
                  ></path>
                  <circle cx="12" cy="10" r="3"></circle>
                </svg>
              </div>
              <div class="flex-1">
                <h4
                  class="font-bold text-gray-800 dark:text-white group-hover:text-green-600 transition-colors duration-300 mb-1"
                >
                  Ubicación
                </h4>
                <p class="text-gray-600 dark:text-gray-300 text-sm mb-1">
                  ${personalInfo.location}
                </p>
                <p
                  class="text-xs text-gray-500 dark:text-gray-400 group-hover:text-green-600/70 transition-colors"
                >
                  Disponible para remoto
                </p>
              </div>
            </div>

            <!-- LinkedIn -->
            <div
              class="group flex items-start gap-4 p-6 rounded-2xl bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm border border-gray-200/50 dark:border-gray-700/50 shadow-lg hover:shadow-2xl hover:shadow-blue-500/10 transition-all duration-500 cursor-pointer transform hover:scale-[1.02] hover:-translate-y-1"
              onclick="window.open('${personalInfo.linkedin}', '_blank')"
            >
              <div
                class="bg-gradient-to-br from-blue-600 to-blue-700 p-4 rounded-2xl group-hover:scale-110 group-hover:rotate-6 transition-all duration-500 shadow-xl group-hover:shadow-blue-500/30"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-6 w-6 text-white"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <path
                    d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"
                  ></path>
                  <rect width="4" height="12" x="2" y="9"></rect>
                  <circle cx="4" cy="4" r="2"></circle>
                </svg>
              </div>
              <div class="flex-1">
                <h4
                  class="font-bold text-gray-800 dark:text-white group-hover:text-blue-600 transition-colors duration-300 mb-1"
                >
                  LinkedIn
                </h4>
                <p
                  class="text-blue-600 hover:underline font-medium text-sm mb-1"
                >
                  @juansamayoa
                </p>
                <p
                  class="text-xs text-gray-500 dark:text-gray-400 group-hover:text-blue-600/70 transition-colors"
                >
                  Red profesional
                </p>
              </div>
            </div>

            <!-- WhatsApp -->
            <div
              class="group flex items-start gap-4 p-6 rounded-2xl bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm border border-gray-200/50 dark:border-gray-700/50 shadow-lg hover:shadow-2xl hover:shadow-green-500/10 transition-all duration-500 cursor-pointer transform hover:scale-[1.02] hover:-translate-y-1"
              onclick="window.open('https://wa.me/50255555555', '_blank')"
            >
              <div
                class="bg-gradient-to-br from-green-500 to-green-600 p-4 rounded-2xl group-hover:scale-110 group-hover:rotate-6 transition-all duration-500 shadow-xl group-hover:shadow-green-500/30"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-5 w-5 text-white"
                  viewBox="0 0 24 24"
                  fill="currentColor"
                >
                  <path
                    d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.465 3.516"
                  ></path>
                </svg>
              </div>
              <div class="flex-1">
                <h4
                  class="font-bold text-gray-800 dark:text-white group-hover:text-green-600 transition-colors duration-300 mb-1"
                >
                  WhatsApp
                </h4>
                <p
                  class="text-green-600 hover:underline font-medium text-sm mb-1"
                >
                  Mensaje directo
                </p>
                <p
                  class="text-xs text-gray-500 dark:text-gray-400 group-hover:text-green-600/70 transition-colors"
                >
                  Respuesta inmediata
                </p>
              </div>
            </div>
          </div>
        </div>

        <!-- Formulario de contacto mejorado -->
        <div class="lg:col-span-2 reveal-item" style="--reveal-delay: 200ms">
          <!-- Mensaje de éxito mejorado -->
          <div
            id="contact-success"
            class="hidden mb-6 p-6 rounded-2xl bg-gradient-to-r from-green-50 via-green-100 to-green-50 dark:from-green-900/40 dark:via-green-800/40 dark:to-green-900/40 border border-green-200 dark:border-green-700 text-green-800 dark:text-green-200 shadow-xl animate-fade-in-up"
          >
            <div class="flex items-center gap-4">
              <div
                class="bg-gradient-to-br from-green-500 to-green-600 p-3 rounded-2xl shadow-lg animate-bounce"
              >
                <svg
                  class="w-6 h-6 text-white"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                >
                  <path
                    fill-rule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    clip-rule="evenodd"></path>
                </svg>
              </div>
              <div>
                <p class="font-bold text-lg">¡Mensaje enviado correctamente!</p>
                <p class="text-sm opacity-90">
                  Te responderé dentro de las próximas 24 horas.
                </p>
              </div>
            </div>
          </div>

          <!-- Mensaje de error mejorado -->
          <div
            id="contact-error"
            class="hidden mb-6 p-6 rounded-2xl bg-gradient-to-r from-red-50 via-red-100 to-red-50 dark:from-red-900/40 dark:via-red-800/40 dark:to-red-900/40 border border-red-200 dark:border-red-700 text-red-800 dark:text-red-200 shadow-xl animate-fade-in-up"
          >
            <div class="flex items-start gap-4">
              <div
                class="bg-gradient-to-br from-red-500 to-red-600 p-3 rounded-2xl shadow-lg animate-pulse"
              >
                <svg
                  class="w-6 h-6 text-white"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                >
                  <path
                    fill-rule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
                    clip-rule="evenodd"></path>
                </svg>
              </div>
              <div id="error-content" class="flex-1"></div>
            </div>
          </div>

          <form
            id="contact-form"
            class="bg-white/90 dark:bg-gray-800/90 backdrop-blur-md p-8 rounded-3xl border border-gray-200/50 dark:border-gray-700/50 shadow-2xl hover:shadow-3xl hover:shadow-primary/10 transition-all duration-500 transform hover:scale-[1.01]"
          >
            <div class="mb-8">
              <h3
                class="text-3xl font-bold text-gray-800 dark:text-white mb-3 animate-fade-in-up"
              >
                Envíame un mensaje
              </h3>
              <p
                class="text-gray-600 dark:text-gray-400 text-base animate-fade-in-up"
                style="animation-delay: 100ms;"
              >
                Completa el formulario y me pondré en contacto contigo pronto
              </p>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
              <!-- Campo Nombre mejorado -->
              <div
                class="space-y-3 animate-fade-in-up"
                style="animation-delay: 200ms;"
              >
                <label
                  for="name"
                  class="block text-sm font-semibold text-gray-700 dark:text-gray-300"
                  >Nombre</label
                >
                <div class="relative group">
                  <input
                    type="text"
                    id="name"
                    name="name"
                    required
                    class="w-full px-5 py-4 pl-14 border-2 border-gray-300 dark:border-gray-600 rounded-2xl bg-white dark:bg-gray-700 text-gray-800 dark:text-white focus:ring-4 focus:ring-primary/20 focus:border-primary outline-none transition-all duration-300 hover:border-primary/50 hover:shadow-lg hover:shadow-primary/10 transform hover:scale-[1.02] group-hover:shadow-primary/20"
                    placeholder="Tu nombre completo"
                  />
                  <div
                    class="absolute left-5 top-1/2 transform -translate-y-1/2 text-gray-400 group-focus-within:text-primary transition-colors duration-300"
                  >
                    <svg
                      class="w-5 h-5"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                      ></path>
                    </svg>
                  </div>
                  <!-- Indicador de validación -->
                  <div
                    class="absolute right-4 top-1/2 transform -translate-y-1/2 opacity-0 transition-opacity duration-300"
                  >
                    <svg
                      id="name-check"
                      class="w-5 h-5 text-green-500"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                      style="display: none;"
                    >
                      <path
                        fill-rule="evenodd"
                        d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                        clip-rule="evenodd"></path>
                    </svg>
                  </div>
                </div>
              </div>

              <!-- Campo Email mejorado -->
              <div
                class="space-y-3 animate-fade-in-up"
                style="animation-delay: 300ms;"
              >
                <label
                  for="email"
                  class="block text-sm font-semibold text-gray-700 dark:text-gray-300"
                  >Email</label
                >
                <div class="relative group">
                  <input
                    type="email"
                    id="email"
                    name="email"
                    required
                    class="w-full px-5 py-4 pl-14 border-2 border-gray-300 dark:border-gray-600 rounded-2xl bg-white dark:bg-gray-700 text-gray-800 dark:text-white focus:ring-4 focus:ring-primary/20 focus:border-primary outline-none transition-all duration-300 hover:border-primary/50 hover:shadow-lg hover:shadow-primary/10 transform hover:scale-[1.02] group-hover:shadow-primary/20"
                    placeholder="tu@email.com"
                  />
                  <div
                    class="absolute left-5 top-1/2 transform -translate-y-1/2 text-gray-400 group-focus-within:text-primary transition-colors duration-300"
                  >
                    <svg
                      class="w-5 h-5"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207"
                      ></path>
                    </svg>
                  </div>
                  <!-- Indicador de validación -->
                  <div
                    class="absolute right-4 top-1/2 transform -translate-y-1/2 opacity-0 transition-opacity duration-300"
                  >
                    <svg
                      id="email-check"
                      class="w-5 h-5 text-green-500"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                      style="display: none;"
                    >
                      <path
                        fill-rule="evenodd"
                        d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                        clip-rule="evenodd"></path>
                    </svg>
                  </div>
                </div>
              </div>
            </div>

            <!-- Campo Asunto mejorado -->
            <div
              class="space-y-3 mb-6 animate-fade-in-up"
              style="animation-delay: 400ms;"
            >
              <label
                for="subject"
                class="block text-sm font-semibold text-gray-700 dark:text-gray-300"
                >Asunto</label
              >
              <div class="relative group">
                <input
                  type="text"
                  id="subject"
                  name="subject"
                  required
                  class="w-full px-5 py-4 pl-14 border-2 border-gray-300 dark:border-gray-600 rounded-2xl bg-white dark:bg-gray-700 text-gray-800 dark:text-white focus:ring-4 focus:ring-primary/20 focus:border-primary outline-none transition-all duration-300 hover:border-primary/50 hover:shadow-lg hover:shadow-primary/10 transform hover:scale-[1.02] group-hover:shadow-primary/20"
                  placeholder="¿De qué quieres hablar?"
                />
                <div
                  class="absolute left-5 top-1/2 transform -translate-y-1/2 text-gray-400 group-focus-within:text-primary transition-colors duration-300"
                >
                  <svg
                    class="w-5 h-5"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z"
                    ></path>
                  </svg>
                </div>
                <!-- Indicador de validación -->
                <div
                  class="absolute right-4 top-1/2 transform -translate-y-1/2 opacity-0 transition-opacity duration-300"
                >
                  <svg
                    id="subject-check"
                    class="w-5 h-5 text-green-500"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                    style="display: none;"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                      clip-rule="evenodd"></path>
                  </svg>
                </div>
              </div>
            </div>

            <!-- Campo Mensaje mejorado -->
            <div
              class="space-y-3 mb-8 animate-fade-in-up"
              style="animation-delay: 500ms;"
            >
              <label
                for="message"
                class="block text-sm font-semibold text-gray-700 dark:text-gray-300"
                >Mensaje</label
              >
              <div class="relative group">
                <textarea
                  id="message"
                  name="message"
                  rows="5"
                  required
                  class="w-full px-5 py-4 pl-14 border-2 border-gray-300 dark:border-gray-600 rounded-2xl bg-white dark:bg-gray-700 text-gray-800 dark:text-white focus:ring-4 focus:ring-primary/20 focus:border-primary outline-none transition-all duration-300 hover:border-primary/50 hover:shadow-lg hover:shadow-primary/10 transform hover:scale-[1.02] group-hover:shadow-primary/20 resize-none"
                  placeholder="Cuéntame sobre tu proyecto, idea o cualquier cosa en la que pueda ayudarte..."
                ></textarea>
                <div
                  class="absolute left-5 top-5 text-gray-400 group-focus-within:text-primary transition-colors duration-300"
                >
                  <svg
                    class="w-5 h-5"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
                    ></path>
                  </svg>
                </div>
                <!-- Indicador de validación -->
                <div
                  class="absolute right-4 top-5 opacity-0 transition-opacity duration-300"
                >
                  <svg
                    id="message-check"
                    class="w-5 h-5 text-green-500"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                    style="display: none;"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                      clip-rule="evenodd"></path>
                  </svg>
                </div>
                <!-- Contador de caracteres -->
                <div
                  class="absolute right-4 bottom-4 text-xs text-gray-400"
                  id="char-count"
                >
                  0/500
                </div>
              </div>
            </div>

            <!-- Botón mejorado -->
            <button
              id="contact-submit"
              type="submit"
              class="group w-full py-5 px-8 bg-gradient-to-r from-primary via-primary to-secondary hover:from-primary/90 hover:via-primary/90 hover:to-secondary/90 text-white font-bold text-lg rounded-2xl shadow-2xl hover:shadow-3xl hover:shadow-primary/30 transition-all duration-500 disabled:opacity-60 disabled:cursor-not-allowed transform hover:scale-[1.02] hover:-translate-y-1 relative overflow-hidden animate-fade-in-up"
              style="animation-delay: 600ms;"
            >
              <!-- Efecto de brillo mejorado -->
              <div
                class="absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-1000 ease-out"
              >
              </div>
              <!-- Partículas flotantes -->
              <div
                class="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-500"
              >
                <div
                  class="absolute top-2 left-1/4 w-1 h-1 bg-white rounded-full animate-ping"
                  style="animation-delay: 0ms;"
                >
                </div>
                <div
                  class="absolute top-4 right-1/3 w-1 h-1 bg-white rounded-full animate-ping"
                  style="animation-delay: 200ms;"
                >
                </div>
                <div
                  class="absolute bottom-3 left-1/3 w-1 h-1 bg-white rounded-full animate-ping"
                  style="animation-delay: 400ms;"
                >
                </div>
                <div
                  class="absolute bottom-2 right-1/4 w-1 h-1 bg-white rounded-full animate-ping"
                  style="animation-delay: 600ms;"
                >
                </div>
              </div>

              <div class="flex items-center justify-center gap-4 relative z-10">
                <svg
                  id="submit-icon"
                  class="w-6 h-6 transition-all duration-300 group-hover:rotate-12 group-hover:scale-110"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
                </svg>
                <span id="submit-text" class="font-bold">Enviar Mensaje</span>
              </div>
            </button>

            <p
              class="text-sm text-gray-500 dark:text-gray-400 mt-6 text-center animate-fade-in-up"
              style="animation-delay: 700ms;"
            >
              Al enviar este formulario, aceptas que me ponga en contacto
              contigo respecto a tu consulta.
            </p>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Animaciones personalizadas para Contact */
  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes shake {
    0%,
    100% {
      transform: translateX(0);
    }
    25% {
      transform: translateX(-5px);
    }
    75% {
      transform: translateX(5px);
    }
  }

  @keyframes pulse-green {
    0%,
    100% {
      box-shadow: 0 0 0 0 rgba(34, 197, 94, 0.4);
    }
    50% {
      box-shadow: 0 0 0 8px rgba(34, 197, 94, 0);
    }
  }

  @keyframes celebration {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
    100% {
      transform: scale(1);
    }
  }

  .animate-fade-in-up {
    animation: fade-in-up 0.6s ease-out forwards;
  }

  .animate-shake {
    animation: shake 0.5s ease-in-out;
  }

  .animate-pulse-green {
    animation: pulse-green 0.3s ease-in-out;
  }

  .animate-celebration {
    animation: celebration 0.8s ease-in-out;
  }

  /* Efectos hover mejorados */
  .reveal-item {
    opacity: 0;
    transform: translateY(30px);
    animation: fade-in-up 0.8s ease-out forwards;
    animation-delay: var(--reveal-delay, 0ms);
  }

  /* Sombras personalizadas */
  .shadow-3xl {
    box-shadow: 0 35px 60px -12px rgba(0, 0, 0, 0.25);
  }

  /* Transiciones suaves para elementos interactivos */
  .group:hover .group-hover\:scale-110 {
    transform: scale(1.1) rotate(6deg);
  }

  .group:hover .group-hover\:shadow-primary\/30 {
    --tw-shadow-color: rgb(99 102 241 / var(--tw-shadow-opacity));
    --tw-shadow: var(--tw-shadow-colored);
  }

  /* Efectos de foco mejorados */
  .focus\:ring-4:focus {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
      var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
      calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
      var(--tw-shadow, 0 0 #0000);
  }
</style>

<script is:inline>
  (() => {
    // Configuración del formulario
    const FORM_CONFIG = {
      MAX_MESSAGE_LENGTH: 500,
      VALIDATION_DELAY: 300,
      RATE_LIMIT_WINDOW: 60000, // 1 minuto
      RATE_LIMIT_MAX_ATTEMPTS: 3,
    };

    // Rate limiter simple
    const rateLimiter = {
      attempts: new Map(),

      canAttempt(identifier) {
        const now = Date.now();
        const userAttempts = this.attempts.get(identifier) || [];

        // Limpiar intentos antiguos
        const validAttempts = userAttempts.filter(
          (time) => now - time < FORM_CONFIG.RATE_LIMIT_WINDOW
        );

        this.attempts.set(identifier, validAttempts);
        return validAttempts.length < FORM_CONFIG.RATE_LIMIT_MAX_ATTEMPTS;
      },

      recordAttempt(identifier) {
        const now = Date.now();
        const userAttempts = this.attempts.get(identifier) || [];
        userAttempts.push(now);
        this.attempts.set(identifier, userAttempts);
      },

      getRemainingTime(identifier) {
        const userAttempts = this.attempts.get(identifier) || [];
        if (userAttempts.length === 0) return 0;
        const oldestAttempt = Math.min(...userAttempts);
        return Math.max(
          0,
          FORM_CONFIG.RATE_LIMIT_WINDOW - (Date.now() - oldestAttempt)
        );
      },
    };

    // Utilidades de validación
    const validateRequired = (value, fieldName) => ({
      isValid: value.trim().length > 0,
      error: value.trim().length > 0 ? "" : `${fieldName} es requerido`,
    });

    const validateEmail = (email) => {
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      const isValid = emailRegex.test(email.trim());
      return {
        isValid,
        error: isValid ? "" : "Email no válido",
      };
    };

    const validateMaxLength = (value, maxLength, fieldName) => ({
      isValid: value.trim().length <= maxLength,
      error:
        value.trim().length <= maxLength
          ? ""
          : `${fieldName} debe tener máximo ${maxLength} caracteres`,
    });

    const validateContactForm = (data) => ({
      name: validateRequired(data.name, "Nombre"),
      email: validateEmail(data.email),
      subject: validateRequired(data.subject, "Asunto"),
      message: (() => {
        const requiredCheck = validateRequired(data.message, "Mensaje");
        if (!requiredCheck.isValid) return requiredCheck;
        return validateMaxLength(
          data.message,
          FORM_CONFIG.MAX_MESSAGE_LENGTH,
          "Mensaje"
        );
      })(),
    });

    const isFormValid = (validation) =>
      Object.values(validation).every((result) => result.isValid);

    // Función debounce
    const debounce = (func, delay) => {
      let timeoutId;
      return (...args) => {
        clearTimeout(timeoutId);
        timeoutId = setTimeout(() => func.apply(null, args), delay);
      };
    };

    // Inicializar cuando el DOM esté listo
    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", initContactForm);
    } else {
      initContactForm();
    }

    function initContactForm() {
      // Elementos del DOM
      const form = document.getElementById("contact-form");
      const btn = document.getElementById("contact-submit");
      const success = document.getElementById("contact-success");
      const error = document.getElementById("contact-error");

      if (!form || !btn || !success || !error) return;

      // Función para mostrar errores de validación mejorada
      function showValidationErrors(errors) {
        const errorContent = document.getElementById("error-content");
        if (errorContent) {
          errorContent.innerHTML = `
            <div class="space-y-2 animate-fade-in-up">
              <div class="font-bold text-lg">Por favor, corrige los siguientes errores:</div>
              <ul class="text-sm space-y-1">
                ${errors.map((err) => `<li class="flex items-center gap-2"><span class="w-1.5 h-1.5 bg-red-500 rounded-full animate-pulse"></span>${err}</li>`).join("")}
              </ul>
            </div>
          `;
        }
        error.classList.remove("hidden");
        // Agregar animación de shake al formulario
        form.classList.add("animate-shake");
        setTimeout(() => form.classList.remove("animate-shake"), 500);
      }

      // Función para validar campo individual mejorada
      function validateField(field) {
        const value = field.value.trim();
        field.classList.remove(
          "border-red-500",
          "border-green-500",
          "border-2"
        );
        field.classList.add("border-2");

        // Resetear indicadores de validación
        const checkIcon = document.getElementById(`${field.name}-check`);
        if (checkIcon) {
          checkIcon.style.display = "none";
        }

        let result = { isValid: true, error: "" };

        switch (field.name) {
          case "name":
            result = validateRequired(value, "Nombre");
            break;
          case "email":
            result = validateEmail(value);
            break;
          case "subject":
            result = validateRequired(value, "Asunto");
            break;
          case "message":
            const requiredCheck = validateRequired(value, "Mensaje");
            if (!requiredCheck.isValid) {
              result = requiredCheck;
            } else {
              result = validateMaxLength(
                value,
                FORM_CONFIG.MAX_MESSAGE_LENGTH,
                "Mensaje"
              );
            }
            break;
        }

        if (result.isValid && value.length > 0) {
          field.classList.remove("border-gray-300", "dark:border-gray-600");
          field.classList.add(
            "border-green-500",
            "shadow-lg",
            "shadow-green-500/20"
          );
          if (checkIcon) {
            checkIcon.style.display = "block";
            checkIcon.parentElement.classList.add("opacity-100");
          }
          // Efecto de éxito
          field.classList.add("animate-pulse-green");
          setTimeout(() => field.classList.remove("animate-pulse-green"), 300);
        } else if (!result.isValid) {
          field.classList.remove("border-gray-300", "dark:border-gray-600");
          field.classList.add(
            "border-red-500",
            "shadow-lg",
            "shadow-red-500/20"
          );
          // Efecto de error
          field.classList.add("animate-shake");
          setTimeout(() => field.classList.remove("animate-shake"), 300);
        } else {
          field.classList.remove(
            "border-green-500",
            "border-red-500",
            "shadow-lg",
            "shadow-green-500/20",
            "shadow-red-500/20"
          );
          field.classList.add("border-gray-300", "dark:border-gray-600");
          if (checkIcon) {
            checkIcon.parentElement.classList.remove("opacity-100");
          }
        }

        return result;
      }

      // Función para actualizar contador de caracteres
      function updateCharCount() {
        const messageField = document.getElementById("message");
        const charCount = document.getElementById("char-count");
        if (messageField && charCount) {
          const count = messageField.value.length;
          charCount.textContent = `${count}/500`;
          charCount.classList.toggle("text-red-500", count > 450);
          charCount.classList.toggle("font-bold", count > 450);
        }
      }

      // Agregar validación con debounce mejorada
      const debouncedValidation = debounce((field) => {
        validateField(field);
      }, FORM_CONFIG.VALIDATION_DELAY);

      // Agregar validación en tiempo real y contador de caracteres
      const fields = form.querySelectorAll("input, textarea");
      fields.forEach((field) => {
        field.addEventListener("input", (e) => {
          debouncedValidation(field);
          if (field.name === "message") {
            updateCharCount();
          }
        });
        field.addEventListener("blur", () => validateField(field));

        // Efectos hover mejorados
        field.addEventListener("mouseenter", () => {
          field.classList.add("transform", "scale-[1.01]");
        });
        field.addEventListener("mouseleave", () => {
          field.classList.remove("transform", "scale-[1.01]");
        });
      });

      // Inicializar contador de caracteres
      updateCharCount(); // Manejar envío del formulario
      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        // Verificar rate limiting
        const userIdentifier = "contact-form";
        if (!rateLimiter.canAttempt(userIdentifier)) {
          const remainingTime = Math.ceil(
            rateLimiter.getRemainingTime(userIdentifier) / 1000
          );
          showValidationErrors([
            `Has superado el límite de envíos. Intenta de nuevo en ${remainingTime} segundos.`,
          ]);
          return;
        }

        // Deshabilitar botón y cambiar estado
        btn.disabled = true;
        const submitText = document.getElementById("submit-text");
        const submitIcon = document.getElementById("submit-icon");

        if (submitText) submitText.textContent = "Enviando...";
        if (submitIcon) {
          submitIcon.innerHTML = `
            <svg class="w-5 h-5 animate-spin" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
          `;
        }

        success.classList.add("hidden");
        error.classList.add("hidden");

        // Obtener y validar datos del formulario
        const formData = new FormData(form);
        const data = {
          name: formData.get("name") || "",
          email: formData.get("email") || "",
          subject: formData.get("subject") || "",
          message: formData.get("message") || "",
        };

        // Validar datos
        const validation = validateContactForm(data);
        if (!isFormValid(validation)) {
          const errors = Object.values(validation)
            .filter((result) => !result.isValid)
            .map((result) => result.error);
          showValidationErrors(errors);
          resetButton();
          return;
        }

        try {
          // Registrar intento
          rateLimiter.recordAttempt(userIdentifier);

          // Enviar formulario
          const response = await fetch(
            "https://my-wedding-database.vercel.app/api/portafolio/contact",
            {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                Accept: "application/json",
              },
              body: JSON.stringify(data),
            }
          );

          if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
          }

          // Éxito mejorado
          success.classList.remove("hidden");
          form.reset();

          // Limpiar estilos de validación con animación
          fields.forEach((field) => {
            field.classList.remove(
              "border-red-500",
              "border-green-500",
              "shadow-lg",
              "shadow-green-500/20",
              "shadow-red-500/20"
            );
            field.classList.add("border-gray-300", "dark:border-gray-600");
            const checkIcon = document.getElementById(`${field.name}-check`);
            if (checkIcon) {
              checkIcon.style.display = "none";
              checkIcon.parentElement.classList.remove("opacity-100");
            }
          });

          // Resetear contador de caracteres
          updateCharCount();

          // Efecto de celebración
          success.classList.add("animate-celebration");
          setTimeout(() => {
            success.classList.add("hidden");
            success.classList.remove("animate-celebration");
          }, 5000);
        } catch (err) {
          console.error("Error al enviar formulario:", err);
          showValidationErrors([
            "No se pudo enviar el mensaje. Por favor, intenta de nuevo más tarde.",
            "Si el problema persiste, puedes contactarme directamente por email.",
          ]);
        } finally {
          resetButton();
        }

        function resetButton() {
          btn.disabled = false;
          if (submitText) submitText.textContent = "Enviar Mensaje";
          if (submitIcon) {
            submitIcon.innerHTML = `
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"/>
            `;
          }
        }
      });
    }
  })();
</script>

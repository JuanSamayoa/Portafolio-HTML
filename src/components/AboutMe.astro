---
import UserIcon from "./icons/UserIcon.astro";
import Heading from "./atoms/Heading.astro";
import Text from "./atoms/Text.astro";
import Card from "./atoms/Card.astro";
import { personalInfo } from "../data/portfolio.js";
---

<div class="w-full reveal-section">
  <Heading 
    level={2} 
    class="mb-2 flex items-center gap-2 reveal-item"
  >
    <UserIcon class="inline-block w-7 h-7 md:w-8 md:h-8" />
    Sobre Mí
  </Heading>
  <div class="grid grid-cols-1 lg:grid-cols-12 gap-8 items-start">    <!-- Foto e info personal -->
    <div
      class="lg:col-span-4 flex flex-col items-center lg:items-start reveal-item"
    >
      <Card class="p-0 overflow-hidden mb-6">
        <div class="relative w-64 h-80 rounded-lg overflow-hidden mx-auto">
          <img
            src="/assets/img/profile-2.webp"
            alt={`Foto de ${personalInfo.name}`}
            class="w-full h-full object-cover"
            onerror={`this.src='${personalInfo.profileImageFallback}';`}
          />
        </div>
      </Card>
      
      <Card class="w-full max-w-sm p-4">
        <ul class="space-y-3">
          <li class="flex items-start gap-2">
            <Text variant="body-sm" class="font-semibold min-w-20 text-secondary">Ubicación:</Text>
            <Text variant="body-sm">{personalInfo.location}</Text>
          </li>
          <li class="flex items-start gap-2">
            <Text variant="body-sm" class="font-semibold min-w-20 text-secondary">Educación:</Text>
            <Text variant="body-sm">Ing. en Sistemas de la Información y Ciencias de la Computación</Text>
          </li>
          <li class="flex items-start gap-2">
            <Text variant="body-sm" class="font-semibold min-w-20 text-secondary">Universidad:</Text>
            <Text variant="body-sm">Universidad Mariano Galvez de Guatemala</Text>
          </li>
          <li class="flex items-start gap-2">
            <Text variant="body-sm" class="font-semibold min-w-20 text-secondary">Idiomas:</Text>
            <Text variant="body-sm">Español (Nativo), Inglés (B2)</Text>
          </li>
          <li class="flex items-start gap-2">
            <Text variant="body-sm" class="font-semibold min-w-20 text-secondary">Stacks:</Text>
            <Text variant="body-sm">Java, Angular, Python</Text>
          </li>
        </ul>
      </Card>
    </div>    <!-- Biografía y habilidades -->
    <div class="lg:col-span-8 space-y-6">
      <div class="reveal-item" style="--reveal-delay: 100ms">
        <Heading level={3} class="mb-3">
          Mi Historia
        </Heading>
        <div class="space-y-4">
          <Text variant="body">
            Soy un Analista de QA con experiencia en pruebas manuales, caja
            negra, caja blanca y pruebas de humo. Además, cuento con
            conocimientos en desarrollo frontend utilizando Angular y una sólida
            base en Java, lo que me permite comprender tanto la calidad del
            software como su proceso de desarrollo. He participado en diversos
            proyectos, tanto personales como profesionales, adquiriendo
            experiencia en múltiples áreas de la tecnología.
          </Text>

          <Text variant="body">
            Desde temprana edad me he sentido atraído por el mundo de la
            informática, explorando tanto el hardware como el software a través
            de cursos y proyectos personales. Mi primer lenguaje de programación
            fue Java, y con el tiempo me he especializado en Angular y en
            aseguramiento de la calidad.
          </Text>

          <Text variant="body">
            Me apasionan la tecnología, la mejora continua y el aprendizaje
            constante. Me considero una persona proactiva, responsable y
            comprometida con mi trabajo. Siempre busco la excelencia en lo que
            hago y disfruto colaborar en equipo para alcanzar objetivos comunes.
          </Text>
        </div>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <Card class="p-6">
          <Heading level={4} class="mb-3 text-secondary">
            QA & Testing
          </Heading>
          <ul class="space-y-2">
            <li class="flex items-start gap-2">
              <span class="text-accent mt-1">•</span>
              <Text variant="body-sm">Pruebas funcionales (manuales y automatizadas)</Text>
            </li>
            <li class="flex items-start gap-2">
              <span class="text-accent mt-1">•</span>
              <Text variant="body-sm">Selenium WebDriver</Text>
            </li>
            <li class="flex items-start gap-2">
              <span class="text-accent mt-1">•</span>
              <Text variant="body-sm">Postman (APIs y Flows)</Text>
            </li>
            <li class="flex items-start gap-2">
              <span class="text-accent mt-1">•</span>
              <Text variant="body-sm">Jira y X-Ray para gestión de pruebas</Text>
            </li>
            <li class="flex items-start gap-2">
              <span class="text-accent mt-1">•</span>
              <Text variant="body-sm">Redacción de casos de prueba y documentación técnica</Text>
            </li>
            <li class="flex items-start gap-2">
              <span class="text-accent mt-1">•</span>
              <Text variant="body-sm">Análisis técnico y reportes de defectos</Text>
            </li>
          </ul>
        </Card>
        
        <Card class="p-6">
          <Heading level={4} class="mb-3 text-secondary">
            Desarrollo
          </Heading>
          <ul class="space-y-2">
            <li class="flex items-start gap-2">
              <span class="text-accent mt-1">•</span>
              <Text variant="body-sm">Automatización con Python</Text>
            </li>
            <li class="flex items-start gap-2">
              <span class="text-accent mt-1">•</span>
              <Text variant="body-sm">Desarrollo web con HTML, CSS y JavaScript</Text>
            </li>
            <li class="flex items-start gap-2">
              <span class="text-accent mt-1">•</span>
              <Text variant="body-sm">Angular & TypeScript (Frontend)</Text>
            </li>
            <li class="flex items-start gap-2">
              <span class="text-accent mt-1">•</span>
              <Text variant="body-sm">SQL para consultas y análisis de datos</Text>
            </li>
            <li class="flex items-start gap-2">
              <span class="text-accent mt-1">•</span>
              <Text variant="body-sm">Java y Swing (aplicaciones de escritorio)</Text>
            </li>
            <li class="flex items-start gap-2">
              <span class="text-accent mt-1">•</span>
              <Text variant="body-sm">VB.NET / ASP.NET (básico/intermedio)</Text>
            </li>
          </ul>
        </Card>
      </div>

      <div class="reveal-item" style="--reveal-delay: 300ms">
        <Heading level={3} class="mb-3">
          Intereses
        </Heading>
        <Text variant="body">
          Fuera del trabajo, disfruto aprender sobre temas nuevos. Además, tengo
          una gran pasión por el fútbol; estuve muy cerca de convertirme en
          futbolista amateur en la liga nacional de Guatemala. Me gusta ver
          fútbol, explorar áreas en las que aún no soy experto para expandir mis
          horizontes, y conocer personas en todos los lugares posibles.
        </Text>
      </div>
    </div>
  </div>
</div>

<style>
  .reveal-section {
    opacity: 1;
    visibility: visible;
  }

  .reveal-item {
    opacity: 0;
    transform: translateY(30px);
    transition:
      opacity 0.6s ease-out,
      transform 0.8s ease-out;
    transition-delay: var(--reveal-delay, 0ms);
  }

  .reveal-item.is-revealed {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  // Configuración de las animaciones de revelación al hacer scroll
  document.addEventListener("DOMContentLoaded", () => {
    const revealItems = document.querySelectorAll(".reveal-item");

    if ("IntersectionObserver" in window) {
      const revealObserver = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              entry.target.classList.add("is-revealed");
              revealObserver.unobserve(entry.target); // Solo animar una vez
            }
          });
        },
        {
          threshold: 0.1, // 10% del elemento visible
          rootMargin: "0px 0px -50px 0px", // Trigger un poco antes
        }
      );

      revealItems.forEach((item) => {
        revealObserver.observe(item);
      });
    } else {
      // Fallback para navegadores sin soporte
      revealItems.forEach((item) => {
        item.classList.add("is-revealed");
      });
    }
  });
</script>
